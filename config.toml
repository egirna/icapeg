#"Reading from env variable if value is not in toml file feature"
#feature is supported for strings, int, bool, time.duration and string slices only
#(every type used in this project)

#to use this feature you have to do the next
#assume that there is an env variable called LOG_LEVEL and you want to assign LOG_LEVEL value to app.log_level
#You will change the value of (log_level= "debug") to (log_level= "$_LOG_LEVEL")

#If you want to add an array as an env variable in your machine, please add backslash before special characters
#like white spaces, double quotes and comas, example:
#export ARRAY= "[\"txt\", \"pdf\", \"dmg\", \"exe\", \"com\", \"rar\", \"unknown\"]"
#Don't forget to put the value between double quotes in case there are white spaces in the value.

#NOTE: before you use this feature please make sure that the env variable that you want to use is globally in
# your machine and not just exported in a local session


title = "ICAP configuration file"

[app]
port = 1344
log_level="debug"
write_logs_to_console= false
services= ["echo", "demo" , "clhashlookup"]
debugging_headers=true
web_server_host = "$_WEB_SERVER_HOST" #Example: "localhost:8081" , replace localhost with the ICAP server IP address.
web_server_endpoint = "/service/message"  

[echo]
vendor = "echo"
service_caption= "echo service"   #Service
service_tag = "ECHO ICAP"  #ISTAG
req_mode=true
resp_mode=true
shadow_service=false
preview_bytes = "1024" #byte
preview_enabled = true# options send preview header or not
process_extensions = ["pdf", "zip", "com"] # * = everything except the ones in bypass, unknown = system couldn't find out the type of the file
reject_extensions = ["docx"]
bypass_extensions = ["*"]
#max file size value from 1 to 9223372036854775807, and value of zero means unlimited
max_filesize = 0 #bytes
return_original_if_max_file_size_exceeded=false
return_400_if_file_ext_rejected=false

[demo]
vendor = "demo"
service_caption= "demo"   #Service
service_tag = "demo ICAP"  #ISTAG
req_mode=true
resp_mode=true
shadow_service=false
preview_bytes = "1024" #byte
preview_enabled = false # options send preview header or not
bypass_extensions = ["*"]
process_extensions = ["pptx","ppt","xlsx","xls","docx", "doc","pdf","exe","zip"] # * = everything except the ones in bypass, unknown = system couldn't find out the type of the file
reject_extensions = []
openJob_url = "https://apiv4.egirna.net/scanner.svc/v4/OpenJob" #
upload_url = "https://apiv4.egirna.net/scanner.svc/v4/upload/file" #
activate_url = "https://apiv4.egirna.net/scanner.svc/v4/ActivateJob" #
result_url =  "https://apiv4.egirna.net/scanner.svc/v4/scan" #
result_interval_req=3000 #Millisecond
split_size=10000000  #byte where size should be > than 10000, else will send one part
timeout  = 3000 #seconds , ICAP will return 408 - Request timeout
fail_threshold = 2
max_filesize = 0 #bytes , value from 1 to 9223372036854775807, and value of zero means unlimited
return_original_if_max_file_size_exceeded=true
return_400_if_file_ext_rejected=false
AppInfo="test icap"
GS-Key="873ca294-2684-4d71-8613-82581b691df8"
profileID="11"
verify_server_cert=true
bypass_on_api_error=false
http_exception_response_code = 403
http_exception_has_body = true
exception_page = "./temp/exception-page.html" # Location of the exception page for this service



[clhashlookup]
vendor = "clhashlookup"
service_caption= "cl-hashlookup"   #Service
service_tag = "cl-hashlookup ICAP"  #ISTAG
req_mode=true
resp_mode=true
shadow_service=false
preview_bytes = "1024" #byte
preview_enabled = true# options send preview header or not
bypass_extensions = ["*"]
process_extensions = ["pdf","exe", "zip"] # * = everything except the ones in bypass, unknown = system couldn't find out the type of the file
reject_extensions = ["docx"]
scan_url = "https://hashlookup.circl.lu/lookup/sha256/" #
timeout  = 300 #seconds , ICAP will return 408 - Request timeout
fail_threshold = 2
max_filesize = 0 #bytes
return_original_if_max_file_size_exceeded=true
return_400_if_file_ext_rejected=false
verify_server_cert=true
bypass_on_api_error=false
http_exception_response_code = 403
http_exception_has_body = true
exception_page = "./temp/exception-page.html" # Location of the exception page for this service

[clamav]
vendor = "clamav"
service_caption= "clamav service"   #Service
service_tag = "CLAMAV ICAP"  #ISTAG
req_mode=true
resp_mode=true
shadow_service=false
preview_bytes = "1024" #byte
preview_enabled = true# options send preview header or not
process_extensions = ["pdf", "zip", "com"] # * = everything except the ones in bypass, unknown = system couldn't find out the type of the file
reject_extensions = ["docx"]
bypass_extensions = ["*"]
socket_path = "/var/run/clamav/clamd.ctl"
fail_threshold = 2
timeout = 10 #seconds, the time upto which the server will wait for clamav to scan the results
#max file size value from 1 to 9223372036854775807, and value of zero means unlimited
max_filesize = 0 #bytes
return_original_if_max_file_size_exceeded=false
return_400_if_file_ext_rejected=false
verify_server_cert=true
bypass_on_api_error=false
http_exception_response_code = 403
http_exception_has_body = true
exception_page = "./temp/exception-page.html" # Location of the exception page for this service